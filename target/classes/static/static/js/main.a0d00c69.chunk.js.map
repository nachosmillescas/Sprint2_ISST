{"version":3,"sources":["AppNavbar.js","Home.js","TFGList.js","TFGEdit.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavbar","props","state","isOpen","toggle","bind","this","setState","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","Component","Home","Container","fluid","Button","TFGList","tfgs","remove","fetch","then","response","json","data","email","a","method","headers","updatedTFGs","filter","i","tfgList","map","tfg","style","whiteSpace","nombre","titulo","tutor","status","ButtonGroup","size","onClick","className","Table","width","TFGEdit","emptyItem","pass","memoria","nota","item","handleChange","handleSubmit","match","params","event","target","value","name","preventDefault","body","JSON","stringify","history","push","title","Form","onSubmit","FormGroup","Label","for","Input","type","id","onChange","autoComplete","withRouter","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0d00c69.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Navbar, NavbarBrand} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class AppNavbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {isOpen: false};\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <Navbar color=\"dark\" dark expand=\"md\">\r\n            <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\r\n        </Navbar>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container } from 'reactstrap';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container fluid>\r\n                    <Button color=\"link\"><Link to=\"/tfgs\">TFGs</Link></Button>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass TFGList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {tfgs: []};\r\n        this.remove = this.remove.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('/tfgs')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({tfgs: data}));\r\n    }\r\n\r\n    async remove(email) {\r\n        await fetch(`/tfgs/${email}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            let updatedTFGs = [...this.state.tfgs].filter(i => i.email !== email);\r\n            this.setState({tfgs: updatedTFGs});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const {tfgs} = this.state;\r\n\r\n        const tfgList = tfgs.map(tfg => {\r\n            return <tr key={tfg.email}>\r\n                <td style={{whiteSpace: 'nowrap'}}>{tfg.nombre}</td>\r\n                <td>{tfg.email}</td>\r\n                <td>{tfg.titulo}</td>\r\n                <td>{tfg.tutor}</td>\r\n                <td>{tfg.status}</td>\r\n                <td>\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" color=\"primary\" tag={Link} to={\"/tfgs/\" + tfg.email}>Edit</Button>\r\n                        <Button size=\"sm\" color=\"danger\" onClick={() => this.remove(tfg.email)}>Delete</Button>\r\n                    </ButtonGroup>\r\n                </td>\r\n            </tr>\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container fluid>\r\n                    <div className=\"float-right\">\r\n                        <Button color=\"success\" tag={Link} to=\"/tfgs/new\">Add TFG</Button>\r\n                    </div>\r\n                    <h3>TFGs</h3>\r\n                    <Table className=\"mt-4\">\r\n                        <thead>\r\n                        <tr>\r\n                            <th width=\"15%\">Nombre</th>\r\n                            <th width=\"15%\">Email</th>\r\n                            <th width=\"15%\">Titulo</th>\r\n                            <th width=\"15%\">Tutor</th>\r\n                            <th width=\"10%\">Estado</th>\r\n                            <th width=\"30%\">Actions</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {tfgList}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TFGList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\n\r\nclass TFGEdit extends Component {\r\n\r\n    emptyItem = {\r\n        nombre: '',\r\n        email: '',\r\n        titulo: '',\r\n        tutor: '',\r\n        pass: '',\r\n        status: 1,\r\n        memoria: null,\r\n        nota: 0\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: this.emptyItem\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.match.params.email !== 'new') { // \r\n            const tfg = await (await fetch(`/tfgs/${this.props.match.params.email}`)).json();\r\n            this.setState({item: tfg});\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        let item = {...this.state.item};\r\n        item[name] = value;\r\n        this.setState({item});\r\n    }\r\n\r\nasync handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {item} = this.state;\r\n\r\n    await fetch('/tfgs' + ((this.props.match.params.email !== 'new') ? '/' + item.email : ''), {\r\n        method: (this.props.match.params.email !== 'new') ? 'PUT' : 'POST', //(item.email) ? 'PUT' : 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(item),\r\n    });\r\n    this.props.history.push('/tfgs');\r\n}\r\n\r\n    render() {\r\n        const {item} = this.state;\r\n        const title = <h2>{item.email ? 'Edit TFG' : 'Add TFG'}</h2>;\r\n\r\n        return <div>\r\n            <AppNavbar/>\r\n            <Container>\r\n                {title}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup>\r\n                        <Label for=\"nombre\">Nombre</Label>\r\n                        <Input type=\"text\" name=\"nombre\" id=\"nombre\" value={item.nombre || ''}\r\n                               onChange={this.handleChange} autoComplete=\"nombre\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input type=\"text\" name=\"email\" id=\"email\" value={item.email || ''}\r\n                               onChange={this.handleChange} autoComplete=\"email\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"titulo\">Titulo</Label>\r\n                        <Input type=\"text\" name=\"titulo\" id=\"titulo\" value={item.titulo || ''}\r\n                               onChange={this.handleChange} autoComplete=\"titulo\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"tutor\">Tutor</Label>\r\n                        <Input type=\"text\" name=\"tutor\" id=\"tutor\" value={item.tutor || ''}\r\n                               onChange={this.handleChange} autoComplete=\"tutor\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"status\">Status</Label>\r\n                        <Input type=\"number\" name=\"status\" id=\"status\" value={item.status || ''}\r\n                               onChange={this.handleChange} autoComplete=\"status\"/>\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                        <Button color=\"secondary\" tag={Link} to=\"/tfgs\">Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(TFGEdit);","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport TFGList from './TFGList';\r\nimport TFGEdit from \"./TFGEdit\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Router>\r\n          <Switch>\r\n            <Route path='/' exact={true} component={Home}/>\r\n            <Route path='/tfgs' exact={true} component={TFGList}/>\r\n            <Route path='/tfgs/:email' component={TFGEdit}/>\r\n          </Switch>\r\n        </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}